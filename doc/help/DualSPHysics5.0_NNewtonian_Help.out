

 <DUALSPHYSICS5-NNEWTONIAN> Copyright (c) 2020 by
 Dr Jose M. Dominguez Alonso, Dr Alejandro Crespo,
 Prof. Moncho Gomez Gesteira, Prof. Benedict Rogers,
 Dr Georgios Fourtakas, Prof. Peter Stansby,
 Dr Renato Vacondio, Dr Corrado Altomare, Dr Angelo Tafuni,
 Orlando Garcia Feal, Ivan Martinez Estevez

 EPHYSLAB Environmental Physics Laboratory, Universidade de Vigo
 School of Mechanical, Aerospace and Civil Engineering, University of Manchester

 DualSPHysics is free software: you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public License
 as published by the Free Software Foundation, either version 2.1 of
 the License, or (at your option) any later version.

 DualSPHysics is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with DualSPHysics. If not, see <http://www.gnu.org/licenses/>.


DualSPHysics5-NNewtonian v1.005 (v5.0.164) (21-11-2020)
========================================================
Information about execution parameters:

  DualSPHysics [name_case [dir_out]] [options]

  General options:
    -h          Shows information about parameters
    -ver        Shows version information
    -info       Shows version features in JSON format
    -opt <file> Loads a file configuration

  Execution options:
    -cpu        Execution on CPU (option by default)
    -gpu[:id]   Execution on GPU and id of the device

    -stable     The result is always the same but the execution is slower
    -saveposdouble:<0/1>  Saves position using double precision (default=0)

    -ompthreads:<int>  Only for CPU execution, indicates the number of threads
                   by host for parallel execution, this takes the number of 
                   cores of the device by default (or using zero value)

    -cellmode:<mode>  Specifies the cell division mode
        full      Lowest and the least expensive in memory (by default)
        half      Fastest and the most expensive in memory

  Formulation options:
    -dbc           Dynamic Boundary Condition DBC (by default)
    -mdbc          Modified Dynamic Boundary Condition mDBC (mode: vel=0)
    -mdbc_noslip   Modified Dynamic Boundary Condition mDBC (mode: no-slip)
    -mdbc_freeslip Modified Dynamic Boundary Condition mDBC (mode: free-slip)
    -mdbc_fast:<0/1>       Fast single precision calculation on GPU (default=1)
    -mdbc_threshold:<float> Kernel support limit to apply mDBC correction [0-1]

    -symplectic      Symplectic algorithm as time step algorithm
    -verlet[:steps]  Verlet algorithm as time step algorithm and number of
                     time steps to switch equations

    -wendland        Wendland kernel (by default)
    -cubic           Cubic spline kernel

    -viscoart:<float>          Artificial viscosity [0-1]
    -viscolamsps:<float>       Laminar+SPS viscosity [order of 1E-6]
    -viscoboundfactor:<float>  Multiplies the viscosity value of boundary

    -ddt:<mode> Specifies the Density Diffusion Term to correct density
        none       Not used (by default)
        1          Diffusion term by Molteni and Colagrossi 2009
        2          Diffusion term by Fourtakas et al 2019 (inner fluid particles)
        3          Diffusion term by Fourtakas et al 2019 (all fluid particles)
    -ddtvalue:<float> Constant for DDT (0.1 by default)

    -shifting:<mode> Specifies the use of Shifting correction
        none       Shifting is disabled (by default)
        nobound    Shifting is not applied near boundary
        nofixed    Shifting is not applied near fixed boundary
        full       Shifting is always applied

  Simulation options:
    -name <string>      Specifies path and name of the case 
    -runname <string>   Specifies name for case execution
    -dirout <dir>       Specifies the general output directory 
    -dirdataout <dir>   Specifies the output subdirectory for binary data 

    -partbegin:begin[:first] dir 
     Specifies the beginning of the simulation starting from a given PART
     (begin) and located in the directory (dir), (first) indicates the
     number of the first PART to be generated


    -tmax:<float>   Maximum time of simulation
    -tout:<float>   Time between output files

    -ftpause:<float> Time to start floating bodies movement. By default 0
    -rhopout:min:max Excludes fluid particles out of these density limits
    -domain_fixed:xmin:ymin:zmin:xmax:ymax:zmax    The domain is fixed
     with the specified values

  Output options:
    -sv:[formats,...] Specifies the output formats.
        none    No particles files are generated
        binx    Binary files (by default)
        info    Information about execution in .ibi4 format (by default)
        vtk     VTK files
        csv     CSV files
    -svres:<0/1>     Generates file that summarises the execution process
    -svtimers:<0/1>  Obtains timing for each individual process
    -svdomainvtk:<0/1>  Generates VTK file with domain limits
    -svpips:<mode>:n  Compute PIPS of simulation each n steps (100 by default),
       mode options: 0=disabled (by default), 1=no save details, 2=save details

    -createdirs:<0/1> Creates full path for output files
                      (value by default is read from DsphConfig.xml or 1)
    -csvsep:<0/1>     Separator character in CSV files (0=semicolon, 1=coma)
                      (value by default is read from DsphConfig.xml or 0)

  Debug options:
    -nsteps:<uint>  Maximum number of steps allowed (debug)
    -svsteps:<0/1>  Saves a PART for each step (debug)

  Examples:
    DualSPHysics case out_case -sv:binx,csv 
    DualSPHysics -name case -dirout out_case -sv:binx,csv 

Finished execution (code=0).

